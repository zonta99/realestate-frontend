// src/custom-theme.scss - Enhanced version for Angular Material v20.1.4
@use '@angular/material' as mat;

// Enhanced M3 theme configuration for v20.1.4
$app-theme:(
  color: (
    theme-type: light,
    primary: mat.$cyan-palette,
    tertiary: mat.$orange-palette,
  ),
  typography: (
    brand-family: 'Roboto',
    plain-family: 'Roboto',
  ),
  density: (
    scale: 0
  )
);

// Dark theme using M3 system
$app-dark-theme: (
  color: (
    theme-type: dark,
    primary: mat.$cyan-palette,
    tertiary: mat.$orange-palette,
  ),
  typography: (
    brand-family: 'Roboto',
    plain-family: 'Roboto',
  ),
  density: (
    scale: 0
  )
);

// Apply the light theme by default
html {
  @include mat.theme($app-theme);

  // Custom app-specific CSS variables (M3 automatically provides sys-* variables)
  --app-border-radius: 12px; // M3 uses larger border radius
  --app-spacing-xs: 4px;
  --app-spacing-sm: 8px;
  --app-spacing-md: 16px;
  --app-spacing-lg: 24px;
  --app-spacing-xl: 32px;

  // M3 design tokens are automatically available as CSS custom properties
  // Examples: --mat-sys-primary, --mat-sys-surface, --mat-sys-on-surface, etc.

  // Base styling using M3 tokens
  color-scheme: light;
  background-color: var(--mat-sys-background);
  color: var(--mat-sys-on-background);
  font-family: var(--mat-sys-typescale-body-medium-font-family-name), sans-serif;
  font-size: var(--mat-sys-typescale-body-medium-font-size);
  line-height: var(--mat-sys-typescale-body-medium-line-height);
}

// Dark theme application
html[data-theme='dark'] {
  @include mat.theme($app-dark-theme);
  color-scheme: dark;
}

// Auto theme based on system preference (M3 compatible)
@media (prefers-color-scheme: dark) {
  html:not([data-theme]) {
    @include mat.theme($app-dark-theme);
    color-scheme: dark;
  }
}

// M3 Component customizations for v20.1.4
// Most styling is handled automatically by M3, but we can override specific aspects

// Ensure cards use proper M3 elevation and colors
.mat-mdc-card {
  // M3 automatically handles container colors, but we can ensure consistency
  transition: box-shadow 0.3s cubic-bezier(0.4, 0.0, 0.2, 1);
}

.mat-mdc-card:hover {
  box-shadow: var(--mat-sys-level-2);
}

// Ensure buttons follow M3 design
.mat-mdc-button {
  border-radius: var(--app-border-radius);
}

.mat-mdc-raised-button {
  border-radius: var(--app-border-radius);
}

// Form fields with M3 styling
.mat-mdc-form-field {
  --mdc-outlined-text-field-container-shape: var(--app-border-radius);
  --mdc-filled-text-field-container-shape: var(--app-border-radius) var(--app-border-radius) 0 0;
}

// Ensure snackbars use proper M3 styling
.mat-mdc-snack-bar-container {
  --mdc-snackbar-container-shape: var(--app-border-radius);
}

// Utility classes for consistent theming
.app-surface {
  background-color: var(--mat-sys-surface);
  color: var(--mat-sys-on-surface);
}

.app-surface-variant {
  background-color: var(--mat-sys-surface-variant);
  color: var(--mat-sys-on-surface-variant);
}

.app-gradient-bg {
  background: linear-gradient(135deg,
    var(--app-gradient-start) 0%,
    var(--app-gradient-end) 100%);
}

.app-shadow {
  box-shadow: 0 2px 8px var(--app-shadow-light);
}

// Animation utilities
.app-fade-in {
  animation: fadeIn 0.3s ease-in-out;
}

@keyframes fadeIn {
  from { opacity: 0; transform: translateY(10px); }
  to { opacity: 1; transform: translateY(0); }
}
